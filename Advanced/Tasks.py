"""
Усложненные задания по Python.
Задачи здесь только по дополнительным темам, их будет сложно решить, если что-то упущенно.
Решения задач включают:
1. использование параметров функции print()
2. использование методов класса str
3. использование итераторов
4. использование генераторов
5. использование скрытых методов в классе
"""

# Задание 1:
# Считать десятичное число. Выписать это число с точностью до 2 знаков.

a = float(input())

# Способ 1 - используя format()
print("{:.2f}".format(a))

# Способ 2 - используя 'f' строку
print(f"{a:.3}")

# Способ 3 - используя % для строки
print("%.2f" % a)


# Задание 2:
# Считывать имя и возраст пользователя. Используя формацию строки, написать "Пример {имя}. Тебе уже {возраст} лет!"

name, age = input(), int(input())

# Способ 1 - функция format()
print("Привет, {:s}. Тебе уже {:d} лет!".format(name, age))

# Способ 2 - 'f' строка
print(f"Привет, {name}. Тебе уже {age} лет!")

# Способ 3 - % в строках
print("Привет, %s. Тебе уже %d лет!" % (name, age))


# Задание 3:
# Создать класс с 2 атрибутами и один объект этого класса. Выписать этот класс с пометками, какие аргументы есть


class A:
    def __init__(self):
        self.a = 2
        self.b = 5

# Способ 1 - использование метода __str__
    def __str__(self) -> str:
        return f"Object of class A. Attributes: a = {self.a}; b = {self.b}."

# Способ 2 - использование метода __iter__ (может заменить __str__, а также помогает писать в массивах)
    def __iter__(self) -> str:
        return f"Object of class A. Attributes: a = {self.a}; b = {self.b}."


a = A()

# Способ 1 - продолжение
print(a)

# Способ 2 - продолжение (отличие - в способе 1 будет другой ответ из-за списка)
print([a])
